"use client";

import { useState } from "react";
import { fetchCveData } from "./api/fetchCveData";
import { SearchBar } from "./components/SearchBar";
import { ResultsList } from "./components/ResultsList";
import { Pagination } from "./components/Pagination";

const itemsPerPage = 10;

export default function Home() {
  const [keyword, setKeyword] = useState("");
  const [cveList, setCveList] = useState([]);
  const [totalResults, setTotalResults] = useState(0);
  const [currentPage, setCurrentPage] = useState(1);
  const [isSearching, setIsSearching] = useState(false);
  const [pageCache, setPageCache] = useState({});

  const handleSearch = async (page = 1) => {
    setIsSearching(true);
    const cachedData = getCachedData(pageCache, page);
    if (cachedData) {
      setCveList(cachedData);
      setIsSearching(false);
    } else {
      const data = await fetchCveData(keyword, page, itemsPerPage);
      const cveData = data.result.CVE_Items;
      setCveList(cveData);
      setTotalResults(data.totalResults);
      updateCache(setPageCache, page, cveData);
      setIsSearching(false);
    }
    setCurrentPage(page);
  };

  function getCachedData(pageCache, page) {
    return pageCache[page];
  }

  function updateCache(setPageCache, page, data) {
    setPageCache((prevCache) => ({ ...prevCache, [page]: data }));
  }

  return (
    <div className="container mx-auto my-4">
      <div className="flex flex-col items-center justify-center">
        <h1 className="text-2xl font-bold mb-4">NVD Vulnerability Search</h1>
        <SearchBar keyword={keyword} setKeyword={setKeyword} onSearch={() => handleSearch(1)} isSearching={isSearching} />
        <ResultsList cveList={cveList} isSearching={isSearching} totalResults={totalResults} />
        <Pagination currentPage={currentPage} totalPages={Math.ceil(totalResults / itemsPerPage)} onClick={(page) => handleSearch(page)} />
      </div>
    </div>
  );
}
